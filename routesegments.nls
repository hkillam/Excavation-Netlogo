globals [
  road-to-entrance
  road-to-top-ramp
  road-to-top-nonramp
  road-down-ramp
  road-to-loader-A
  road-to-loader-B
  road-to-bottom-ramp
  road-to-exit-non-ramp
  road-up-ramp
  road-to-exit
  road-to-dump

  ;; mark some specific locations in our site
  dest-entrance
  dest-site-exit
  dest-top-nonramp
]

to set-route-constants
  set road-to-entrance   1
  set road-to-top-ramp   2   ;; from entrance flagman to top of ramp
  set road-down-ramp     3   ;; from top of ramp to bottom
  set road-to-loader-A   4   ;;  to a piece of material
  set road-to-loader-B   5   ;;  to a piece of material
  set road-to-bottom-ramp 6  ;;  grab material and go to to bottom of ramp
  set road-up-ramp       7   ;;  up the ramp
  set road-to-exit      8   ;;  from ramp to exit flagman
  set road-to-dump      9   ;;  drive away
  set road-to-top-nonramp 10  ;; not using a ramp, turn right here.
  set road-to-exit-non-ramp 11;

  set dest-entrance patch  -11 5       ;; flagman at the entrance to the site
  set dest-site-exit patch 12 5
  set dest-top-nonramp patch -5 5
end


to-report ramp-ready?
  let ramp-ahead? true

  ;; if this isn't a ramp, just return true
  ask patch-ahead 1 [
    if is-ramp? = false [
      set ramp-ahead? false
    ]
  ]
  if ramp-ahead? = false [
    set using-ramp? false
    report true
  ]

  if using-ramp? = true [
    report true  ;; I'm walking here
  ]

  ;; if the ramp is free, take it, and mark the direction it is being used.
  if count trucks with [using-ramp? = true] = 0 [
    set using-ramp? true
    
    ifelse road = road-to-bottom-ramp  or road = road-up-ramp [
       set ramp-down? false
       set ramp-up? true
    ][
      if road = road-to-top-ramp [
         set ramp-up? false
         set ramp-down? true  
      ]     
    ]
    report true
  ]
  
  ;; if the ramp is in use the same direction, jump on
  if  (road = road-to-bottom-ramp or road = road-up-ramp) and ramp-up? = true [
    set using-ramp? true
    report true
  ]
  
    ;; if the ramp is in use the same direction, jump on
  if  road = road-to-top-ramp and ramp-down? = true [
    set using-ramp? true
    report true
  ]

  report false
end

to set-next-section
    ifelse road = road-to-entrance [
      ifelse use-ramp? = true [
         set road road-to-top-ramp   ;; from entrance flagman to top of ramp
         set target patch 0 5
      ][
         set road road-to-top-nonramp
         set target dest-top-nonramp
      ]
    ][
    ifelse road = road-to-top-ramp [
      set road road-down-ramp   ;; from top of ramp to bottom
      set target patch 0 -4

    ][
    ifelse road = road-down-ramp or road = road-to-top-nonramp [
      set road road-to-loader-A  ;;  to a piece of material
      set using-ramp? false
        rt 90
        fd 1
        let target-loader one-of loaders with [group = 1]
        set target [ patch-here ] OF target-loader

      set radius distance target / 2
        if radius > 2 [
          rt 90
          if ([is-ramp?] of patch-ahead 1) = true [
            set radius 0
            lt 90
          ]
        ]
    ][
    ifelse road = road-to-loader-A [
        set loading? true
      ;;ask material-on target [die]
      set road road-to-loader-B  ;;  grab material and go to to bottom of ramp
      set target [ patch-here ] OF one-of loaders with [group = 2]
      set radius distance target / 2
                  if radius > 2 [
          rt 90
        ]
    ][
    ifelse road = road-to-loader-B [
       ;; set loading? true
      ;;ask material-on target [die]
            ifelse use-ramp? = true [
      set road road-to-bottom-ramp  ;;  grab material and go to to bottom of ramp
      set target patch 0 -5
            ][
              set road road-to-exit-non-ramp
              set target patch 6 5
            ]
      set radius distance target / 2
                  if radius > 2 [
          rt 90
        ]
    ][
    ifelse road = road-to-bottom-ramp [

      set road road-up-ramp  ;;  up the ramp
      set target patch 0 5
    ][
    ifelse road = road-up-ramp or road = road-to-exit-non-ramp [
      set road road-to-exit  ;;  from ramp to exit flagman
      set target dest-site-exit

    ][
    ifelse road = road-to-exit [
      set road road-to-dump  ;;  drive away
      set target patch 12 -13

    ][
    if road = road-to-dump [
      set road road-to-entrance  ;;  teleport back to beginning
      setxy -11 -15
      set target dest-entrance
      set loaded 0

  ]]]]]]]]]

    face-nowrap target
    if (road = road-to-loader-A or road = road-to-loader-B or road = road-to-bottom-ramp) and radius > 2 [
          rt 90
    ]
end
